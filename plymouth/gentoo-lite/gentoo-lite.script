# This is an example plymouth plugin script

Window.SetBackgroundTopColor(0, 0, 0);
Window.SetBackgroundBottomColor(0, 0, 0);

# Logo
logo.image = Image("gentoo.png");
logo.sprite = Sprite(logo.image);
logo.sprite.SetX(Window.GetX() + Window.GetWidth()  / 2 - logo.image.GetWidth()  / 2);
logo.sprite.SetY(Window.GetY() + Window.GetHeight() / 2 - logo.image.GetHeight() / 2);
logo.sprite.SetOpacity(1);

#----------------------------------------- Dialogue --------------------------------

fun dialog_setup()
  {
    local.box;
    local.lock;
    local.entry;
    
    box.image = Image("box.png");
    lock.image = Image("lock.png");
    entry.image = Image("entry.png");
    
    box.sprite = Sprite(box.image);
    box.x = Window.GetX() + Window.GetWidth()  / 2 - box.image.GetWidth ()/2;
    box.y = Window.GetY() + Window.GetHeight() / 2 - box.image.GetHeight()/2;
    box.z = 10000;
    box.sprite.SetPosition(box.x, box.y, box.z);
    
    lock.sprite = Sprite(lock.image);
    lock.x = box.x + box.image.GetWidth()/2 - (lock.image.GetWidth() + entry.image.GetWidth()) / 2;
    lock.y = box.y + box.image.GetHeight()/2 - lock.image.GetHeight()/2;
    lock.z = box.z + 1;
    lock.sprite.SetPosition(lock.x, lock.y, lock.z);
    
    entry.sprite = Sprite(entry.image);
    entry.x = lock.x + lock.image.GetWidth();
    entry.y = box.y + box.image.GetHeight()/2 - entry.image.GetHeight()/2;
    entry.z = box.z + 1;
    entry.sprite.SetPosition(entry.x, entry.y, entry.z);
    
    global.dialog.box = box;
    global.dialog.lock = lock;
    global.dialog.entry = entry;
    global.dialog.bullet_image = Image("bullet.png");
    dialog_opacity (1);
  }
    
fun dialog_opacity(opacity)
  {
    dialog.box.sprite.SetOpacity (opacity);
    dialog.lock.sprite.SetOpacity (opacity);
    dialog.entry.sprite.SetOpacity (opacity);
    for (index = 0; dialog.bullet[index]; index++)
      {
        dialog.bullet[index].sprite.SetOpacity(opacity);
      }
  }

fun display_normal_callback ()
  {
    #global.status = "normal";
    if (global.dialog)
      dialog_opacity (0);
  }

fun display_password_callback (prompt, bullets)
  {
    global.status = "password";
    if (!global.dialog)
	dialog_setup();
    else
	dialog_opacity(1);
    for (index = 0; dialog.bullet[index] || index < bullets; index++)
      {
        if (!dialog.bullet[index])
          {
            dialog.bullet[index].sprite = Sprite(dialog.bullet_image);
            dialog.bullet[index].x = dialog.entry.x + index * dialog.bullet_image.GetWidth();
            dialog.bullet[index].y = dialog.entry.y + dialog.entry.image.GetHeight() / 2 - dialog.bullet_image.GetHeight() / 2;
            dialog.bullet[index].z = dialog.entry.z + 1;
            dialog.bullet[index].sprite.SetPosition(dialog.bullet[index].x, dialog.bullet[index].y, dialog.bullet[index].z);
          }
        if (index < bullets)
          dialog.bullet[index].sprite.SetOpacity(1);
        else
          dialog.bullet[index].sprite.SetOpacity(0);
      }
  }

Plymouth.SetDisplayNormalFunction(display_normal_callback);
Plymouth.SetDisplayPasswordFunction(display_password_callback);

#----------------------------------------- Progress Bar --------------------------------

progress.dot = [];
progress.update_interval = 5;
progress.index = 5;
progress.count = 0;
progress.dot_on  = Image("progress_dot_on.png");
progress.dot_off = Image("progress_dot_off.png");
progress.dot_width = progress.dot_on.GetWidth();
progress.x = Window.GetX() + (Window.GetWidth() / 2) - (progress.dot_width * 3);
progress.y = logo.sprite.GetY() + logo.image.GetHeight() + 10;
pd = progress;

for (index = 0; index < 6; index++)
{
	pd.dot[index] = Sprite(pd.dot_off);
	pd.dot[index].SetPosition(pd.x + (pd.dot_width * index), pd.y, 0);
	pd.dot[index].SetOpacity(1);
}

pd.dot[0].SetImage(pd.dot_on);
pd.dot[5].SetImage(pd.dot_on);

fun progress_callback (duration, progress)
{
	if (pd.count++ >= pd.update_interval)
	{
		pd.count = 0;
		pd.dot[pd.index].SetImage(pd.dot_off);
		pd.dot[(pd.index + 1) % 6].SetImage(pd.dot_off);
		pd.index = (++pd.index % 6);
		pd.dot[pd.index].SetImage(pd.dot_on);
		pd.dot[(pd.index + 1) % 6].SetImage(pd.dot_on);
	}
}

Plymouth.SetBootProgressFunction(progress_callback);

#----------------------------------------- Quit --------------------------------

fun quit_callback ()
{
  logo.sprite.SetOpacity (1);
}

#----------------------------------------- Message --------------------------------

message_sprite_max = 25;
message_sprites = [];
message_sprite_count = 0;
message_sprite_y = 10;
msg_text = "";
msg_image = Image.Text(msg_text, 1, 1, 1);
msg_sprite = Sprite(msg_image);
msg_next = 0;
quiet = 0;

status = "normal";
progress_visible = 1;

fun display_message_callback (text)
{
  if (text == "msg")
  {
    msg_next = 1;
  }
  else if (text == "hide-progress")
  {
    status = "normal";
    logo.sprite.SetOpacity(1);		
    progress_box.sprite.SetOpacity(0);
    progress_bar.sprite.SetOpacity(0);
  }
  else if (text == "set-quiet")
  {
    quiet = 1;
  }
  else if (text == "show-progress")
  {
    status = "anim";
    logo.sprite.SetOpacity(1);		
    progress_box.sprite.SetOpacity(1);
    progress_bar.sprite.SetOpacity(1);
  }
  else
  {
    if (msg_next == 1)
    {
      msg_text = text;
      msg_image = Image.Text(msg_text, 1, 1, 1);
      msg_sprite = Sprite(msg_image);
      msg_sprite.text = text;
      msg_sprite.SetPosition((Window.GetX() + Window.GetWidth()  / 2 - msg_image.GetWidth()  / 2), Window.GetHeight() - msg_image.GetHeight() - 20, 10000);
      msg_next = 0;
    }
    else if (quiet == 0)
    {
      if (message_sprite_count >= message_sprite_max)
      {
        message_sprite_y = 10;
	my_image = Image.Text(text, 1, 1, 1);

        for (i = 0; i < message_sprite_max - 1; i++)
	{
	  message_sprites[i] = message_sprites[i + 1];
	  message_sprites[i + 1].SetPosition(10, message_sprite_y, 10000);
	  message_sprite_y += my_image.GetHeight();
	}
	message_sprites[i] = Sprite(my_image);
	message_sprites[i].SetPosition(10, message_sprite_y, 10000);
      }
      else
      {
        my_image = Image.Text(text, 1, 1, 1);
        message_sprites[message_sprite_count] = Sprite(my_image);
        message_sprites[message_sprite_count].SetPosition(10, message_sprite_y, 10000);
        message_sprite_count++;
        message_sprite_y += my_image.GetHeight();
      }
    }
  }
}

fun hide_message_callback (text)
{
	for (i = 0; i < message_sprite_count; i++)
	{
		if (message_sprites[i].text == text)
			message_sprites[i] = NULL;
	}
}

Plymouth.SetDisplayMessageFunction (display_message_callback);
Plymouth.SetHideMessageFunction (hide_message_callback);
Plymouth.SetUpdateStatusFunction(display_message_callback);
Plymouth.SetQuitFunction(quit_callback);

